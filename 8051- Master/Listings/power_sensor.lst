C51 COMPILER V9.55   POWER_SENSOR                                                          05/05/2019 19:03:45 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE POWER_SENSOR
OBJECT MODULE PLACED IN .\Objects\power_sensor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\power_sensor.c LARGE OPTIMIZE(2,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\power_sensor.lst) TABS(2) OBJECT(.\Objects\power_sensor.obj)

line level    source

   1          #include "power_sensor.h"
   2          #include <math.h>
   3          
   4          sbit sig = P1^1;
   5          sfr16 ADC0 = 0xbe;
   6          float Vref=2.40; //2,40 V (datasheet)
   7          float tension=0;
   8          float intensite=0;
   9          float Rshunt = 0.05; //50mOhms
  10          
  11          
  12          int Mesure_Courant(char* commande)
  13          {
  14   1          config_ADC();
*** WARNING C206 IN LINE 14 OF src\power_sensor.c: 'config_ADC': missing function-prototype
  15   1          
  16   1          AMX0SL = 0x14; // sélection des ports d'entrées AIN1
  17   1          AD0BUSY = 0x1; //ADC0 conversion is in progress
  18   1        /*
  19   1          unsigned int lecture_high;
  20   1          unsigned int lecture_low;
  21   1        */
  22   1        
  23   1        
  24   1          if(strcmp(commande,"MI")==0 {
*** WARNING C206 IN LINE 24 OF src\power_sensor.c: 'strcmp': missing function-prototype
*** ERROR C267 IN LINE 24 OF src\power_sensor.c: 'strcmp': requires ANSI-style prototype
*** ERROR C141 IN LINE 24 OF src\power_sensor.c: syntax error near '{'
  25   2          
  26   2          while (AD0INT ==0) {}; //tant que la conversion est en cours
  27   2          AD0INT = 0x00; // Flag marquant la fin de la conversion 
  28   2          
  29   2          tension= (ADC0*Vref)/(pow(2,10));
  30   2            
  31   2          intensite = (1000*tension)/Rshunt;
  32   2            
  33   2          /*
  34   2          lecture_low <<4; //on décale pour obtenir les bits de poids faible
  35   2          lecture_high>>4; //on décale pour obtenir les bits de poids fort
  36   2            
  37   2          tension = lecture_high + lecture_low;
  38   2            */
  39   2          
  40   2            return intensite;
  41   2            
  42   2      
  43   2            
  44   2          }
  45   1      }
  46          
  47          void power_sensor_process(OUT_M1 * cmd)
  48          {
  49   1        
  50   1        
C51 COMPILER V9.55   POWER_SENSOR                                                          05/05/2019 19:03:45 PAGE 2   

  51   1      }
  52          

C51 COMPILATION COMPLETE.  2 WARNING(S),  2 ERROR(S)
