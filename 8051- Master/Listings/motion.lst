C51 COMPILER V9.55   MOTION                                                                04/11/2019 18:13:35 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MOTION
OBJECT MODULE PLACED IN .\Objects\motion.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\motion.c LARGE OPTIMIZE(2,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\motion.lst) TABS(2) OBJECT(.\Objects\motion.obj)

line level    source

   1          #include "motion.h"
   2          #include <math.h>
   3          
   4          
   5          int angle_target(byte x_target, byte y_target)
   6          {
   7   1        float f_angle = 0;
   8   1        int angle = 0;
   9   1        
  10   1        f_angle = atan((x_target/(float)y_target));
  11   1        f_angle = (180 * f_angle) / M_PI; 
  12   1        
  13   1        angle = (int)f_angle;
  14   1        
  15   1        return angle;
  16   1      }
  17          
  18          
  19          int delta_angle(int * alpha, int * beta)
  20          {
  21   1        int angle = 0;
  22   1        
  23   1        /*
  24   1        // Si signes opposés
  25   1        if((*alpha) * (*beta) < 0)
  26   1        {
  27   1          angle = (ABS(*alpha) + ABS(*beta));
  28   1        }else{
  29   1          angle = ABS((*alpha) - (*beta));
  30   1        }
  31   1        
  32   1        if(alpha <= 0)
  33   1        {
  34   1          return (-1) * angle;
  35   1        }
  36   1        else
  37   1        {
  38   1          return angle;
  39   1        }*/
  40   1        
  41   1          // Si signes opposés
  42   1        if((*alpha) * (*beta) < 0)
  43   1        {
  44   2          if((*alpha) < (*beta))
  45   2          {
  46   3            if((*beta) < (*alpha +180))
  47   3            {
  48   4              angle = (ABS(*alpha) + ABS(*beta));
  49   4            }
  50   3            else{
  51   4              angle = (-1) * (360 - (ABS(*alpha) + ABS(*beta)));
  52   4            }
  53   3          }
  54   2          else
C51 COMPILER V9.55   MOTION                                                                04/11/2019 18:13:35 PAGE 2   

  55   2          {
  56   3            if((*beta) < (*alpha - 180))
  57   3            {
  58   4              angle = (-1) * (ABS(*alpha) + ABS(*beta));
  59   4            }
  60   3            else{
  61   4              angle = (360 - (ABS(*alpha) + ABS(*beta)));
  62   4            }
  63   3          } 
  64   2        }
  65   1        else{
  66   2          if((*alpha) < (*beta))
  67   2          {
  68   3            angle = ABS((*alpha) - (*beta));
  69   3          }
  70   2          else
  71   2          {
  72   3            angle = (-1) * ABS((*alpha) - (*beta));
  73   3          }
  74   2        }
  75   1        
  76   1        return angle;
  77   1      }
  78          
  79          float distance(byte x, byte y)
  80          {
  81   1        
  82   1        return sqrt(x*x + y*y);
  83   1      }
  84          
  85          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1530    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
