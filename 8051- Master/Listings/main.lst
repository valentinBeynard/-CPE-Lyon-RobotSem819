C51 COMPILER V9.55   MAIN                                                                  05/07/2019 08:31:28 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\main.c LARGE OPTIMIZE(2,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "debug.h"
   2          #include "commands_parser.h"
   3          #include "serializer.h"
   4          #include "distance_detector.h"
   5          
   6          #include <stdlib.h>
   7          #include <stdio.h>
   8          #include <string.h>
   9          
  10          #include "spi_master.h"
  11          
  12          /*
  13          #############################################################################
  14                  PIN List
  15          #############################################################################
  16          *
  17          * UART0 = TX0 -> P0.0 | RX0 -> P0.1 
  18          *
  19          * SPI = SCK -> P0.2 | MISO -> P0.3 | MOSI -> P0.4 | NSS -> P0.5
  20          *       SCK : OUT
  21          *       MISO : IN
  22          *       MOSI : OUT
  23          *       NSS : Vcc
  24          *
  25          * UART1 : TX1 -> P0.6 | RX1 -> P0.7
  26          *
  27          * Pin NSS_slave : P1.0
  28          *
  29          * Pin Servo_H : P1.2
  30          *
  31          * Pin Télémètre AV : AIN0.0 -> J11.7
  32          *
  33          * Pin Télémètre AR : AIN0.1 -> J11.8
  34          *
  35          * Pin Mesure Courant : AIN0.6 AIN0.1 -> J11.11
  36          *
  37          *
  38          *
  39          *
  40          */
  41          
  42          
  43          sfr Reg = 0xFF;
  44          
  45          OUT_M1 commands = {Epreuve_non, // Numéro Epreuve
  46                                Mouvement_non,  // Etat mouvement
  47                                0,  //  Vitesse
  48                                0,  // Coord_X
  49                                0,  // Coord_Y
  50                                0,  // Angle
  51                                ACQ_non,//ACQ_non,  // Commande d'acquisition du son
  52                                0,  // Durée d'acquisition
  53                                GEN_non,
  54                                0,  //  Code fréquence
C51 COMPILER V9.55   MAIN                                                                  05/07/2019 08:31:28 PAGE 2   

  55                                0,  // Duree son
  56                                0,  // Duree silence
  57                                0,  // Nombre de bip
  58                                DCT_non,  // Commande de détection d'obstacle
  59                                0,  // Résolution angulaire de la détection d'obstacle
  60                                Lumiere_non,  // Commande d'allumage du pointeur lumineux
  61                                0,  //Intensitée lumineuse
  62                                0,  // Durée d'allumage
  63                                0,  // Durée d'extinction
  64                                0,  // Nombre de cycles d'allumage
  65                                Servo_non,  // Commande de position du servo
  66                                0,  // Paramètre angle
  67                                Energie_non,  // Commande relevée courant
  68                                Position_non, // Commande de gestion de position
  69                                0,  // Coord X de position
  70                                0,  // Coord Y de position
  71                                0,  // Angle
  72                                Photo_non,  // Commande de prise de phot
  73                                0,  // Temps entre deux photo
  74                                0 // Nbr de photo
  75                                };
  76                                
  77          IN_M1 informations = { Invite_non,  // Identifieur de l'etat d'Invite
  78                                    "Start Epreuve !\n",  // Ptr sur la chaine contenant le msg d'invite
  79                                    BUT_Atteint_non,  // Arrivée au point transmit
  80                                    BUT_Servo_non,  // Information position servomoteur
  81                                    DCT_Obst_non, // Mode de détection d'obstacle
  82                                    0,  // ptr vers tableau des distances
  83                                    0,  // taille du tableau 
  84                                    RESULT_Courant_non, // Identificateur pour la mesure de courant
  85                                    0,  // Valeur de courant relevée
  86                                    RESULT_Energie_non, // Identificateur pour la mesure d'énergie
  87                                    0,  // Valeur d'énergie relevée
  88                                    RESULT_Position_non,  // Identificateur de position du robot
  89                                    0,  // Coord X
  90                                    0,  // Coord Y
  91                                    0,  // Angle
  92                                    Aux_non,  // Identificateur pour la commande auxiliare
  93                                    0 // ptr vers la chaîne de caractère auxiliare
  94                                };
  95            
  96            
  97                
  98                                
  99          PARSER_RESULT parser_result = {1 , &commands, &informations};
 100          DD_PACKET dd_packet = {&commands, &informations, 0.0, 0, 0, 0};
 101          SPI_PACKET spi_packet = { 0, {0xA5,0x00,0x64,'F','G'}, 0};
 102          
 103          byte epreuve_start = 0;
 104          
 105          void Init_External_clk()
 106          {
 107   1        // Config External Osci
 108   1        OSCXCN = 0x67;
 109   1        while(OSCXCN != 0xE7) {}
 110   1        
 111   1        // Use Exern CLK
 112   1        OSCICN = 0x08;
 113   1          
 114   1        CKCON = 0x00;
 115   1      }
 116          
C51 COMPILER V9.55   MAIN                                                                  05/07/2019 08:31:28 PAGE 3   

 117          void Enable_Crossbar()
 118          {
 119   1        // Enable Crossbar
 120   1        XBR2 |= 0x40;
 121   1      }
 122          
 123          void enable_general_Int()
 124          {
 125   1        EA = 1; // Enable general interruption
 126   1      }
 127          
 128          
 129          int main (void)
 130          {
 131   1        char mes[10];
 132   1        float f = 0.0;
 133   1        int angle = 80;
 134   1        int ij = 0;
 135   1        
 136   1        
 137   1        Reg = 0xDE;   // Dévalidation du watchdog 
 138   1        Reg = 0xAD;
 139   1        
 140   1        // µP candencé sur clk extern à 22 MHz           
 141   1        Init_External_clk();
 142   1        
 143   1        // Initialise l'UART0 et le Timer 2 pour le parser de commandes, et init le buffer des msg retour     
 144   1        Init_parser(&parser_result);
 145   1      
 146   1          
 147   1        // Initialise l'UART1 utilisé pour communiquer avec le sérializer
 148   1        init_serializer_UART1();
 149   1                    
 150   1        Init_ADC0();
*** WARNING C206 IN LINE 150 OF src\main.c: 'Init_ADC0': missing function-prototype
 151   1        
 152   1        Init_distance_detector();
 153   1        
 154   1        Init_SPI();
 155   1        
 156   1        Enable_Crossbar();
 157   1      
 158   1        enable_general_Int();
 159   1        
 160   1        USART_print("Start Routine \n\n");
 161   1        USART_print("Waiting for Serializer Init Processing... \n\n");
 162   1        
 163   1      
 164   1                
 165   1        serializer_init_serial();
 166   1                    
 167   1        USART_print("\n\n#############################\n\n>");
 168   1      
 169   1        //serializer_print("mogo 1:50 2:50");
 170   1                  
 171   1        while(1)
 172   1        {
 173   2          
 174   2          cmd_parser_process(&parser_result);
 175   2          
 176   2          if( parser_result.commands->Etat_Epreuve == Stop_Urgence)
 177   2          {
C51 COMPILER V9.55   MAIN                                                                  05/07/2019 08:31:28 PAGE 4   

 178   3            USART_print("Quit");
 179   3            break;
 180   3          }
 181   2          
 182   2          if( parser_result.commands->Etat_Epreuve == epreuve1)
 183   2          {
 184   3            // Start epreuve message
 185   3            if(epreuve_start == 0)
 186   3            {
 187   4              parser_result.informations->Etat_Invite = Invite_oui;
 188   4              epreuve_start = 1;
 189   4            }
 190   3            
 191   3            // Robot movments handler
 192   3            serializer_process(&parser_result);
 193   3            
 194   3            // Robot obstacles detection handler
 195   3            distance_detector_process(&dd_packet);
 196   3            
 197   3            // Master-Slave communication
 198   3            spi_process(&commands, &spi_packet);
 199   3          
 200   3          }
 201   2          
 202   2          else if(parser_result.commands->Etat_Epreuve == epreuve2)
 203   2          {
 204   3            angle_calibration_process(&parser_result);
 205   3            
 206   3          }
 207   2          
 208   2        }
 209   1        
 210   1        USART_print("Fin Soft");
 211   1        
 212   1        while(1){}
 213   1        
 214   1      }
*** WARNING C280 IN LINE 131 OF src\main.c: 'mes': unreferenced local variable
 215          
 216          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    311    ----
   CONSTANT SIZE    =    128    ----
   XDATA SIZE       =     89      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
