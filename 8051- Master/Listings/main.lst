C51 COMPILER V9.55   MAIN                                                                  05/14/2019 08:56:50 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\main.c LARGE OPTIMIZE(2,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "debug.h"
   2          #include "commands_parser.h"
   3          #include "serializer.h"
   4          #include "distance_detector.h"
   5          #include "power_sensor.h"
   6          
   7          #include <stdlib.h>
   8          #include <stdio.h>
   9          #include <string.h>
  10          
  11          #include "spi_master.h"
  12          
  13          /*
  14          #############################################################################
  15                  PIN List
  16          #############################################################################
  17          *
  18          * UART0 = TX0 -> P0.0 | RX0 -> P0.1 
  19          *
  20          * SPI = SCK -> P0.2 | MISO -> P0.3 | MOSI -> P0.4 | NSS -> P0.5
  21          *       SCK : OUT
  22          *       MISO : IN
  23          *       MOSI : OUT
  24          *       NSS : Vcc
  25          *
  26          * UART1 : TX1 -> P0.6 | RX1 -> P0.7
  27          *
  28          * Pin NSS_slave : P1.0
  29          *
  30          * Pin Servo_H : P1.2
  31          *
  32          * Pin Télémètre AV : AIN0.0 -> J11.7
  33          *
  34          * Pin Télémètre AR : AIN0.1 -> J11.8
  35          *
  36          * Pin Mesure Courant : AIN0.6 AIN0.1 -> J11.11
  37          *
  38          *
  39          *
  40          *
  41          * #############################################################################
  42                    Module List
  43          * #############################################################################
  44          *
  45          *   UART0
  46          *   UART1
  47          *   SPI
  48          *   Timer0    (Servomoteur)
  49          *   Timer1    (Power Sensor)
  50          *   Timer2    (UART0)
  51          *   Timer4    (UART1)
  52          *   AIN0
  53          *
  54          *
C51 COMPILER V9.55   MAIN                                                                  05/14/2019 08:56:50 PAGE 2   

  55          */
  56          
  57          
  58          sfr Reg = 0xFF;
  59          
  60          OUT_M1 commands = {Epreuve_non, // Numéro Epreuve
  61                                Mouvement_non,  // Etat mouvement
  62                                0,  //  Vitesse
  63                                0,  // Coord_X
  64                                0,  // Coord_Y
  65                                0,  // Angle
  66                                ACQ_non,//ACQ_non,  // Commande d'acquisition du son
  67                                0,  // Durée d'acquisition
  68                                GEN_non,
  69                                0,  //  Code fréquence
  70                                0,  // Duree son
  71                                0,  // Duree silence
  72                                0,  // Nombre de bip
  73                                DCT_non,  // Commande de détection d'obstacle
  74                                0,  // Résolution angulaire de la détection d'obstacle
  75                                Lumiere_non,  // Commande d'allumage du pointeur lumineux
  76                                0,  //Intensitée lumineuse
  77                                0,  // Durée d'allumage
  78                                0,  // Durée d'extinction
  79                                0,  // Nombre de cycles d'allumage
  80                                Servo_non,  // Commande de position du servo
  81                                0,  // Paramètre angle
  82                                Energie_non,  // Commande relevée courant
  83                                Position_non, // Commande de gestion de position
  84                                0,  // Coord X de position
  85                                0,  // Coord Y de position
  86                                0,  // Angle
  87                                Photo_non,  // Commande de prise de phot
  88                                0,  // Temps entre deux photo
  89                                0 // Nbr de photo
  90                                };
  91                                
  92          IN_M1 informations = { Invite_non,  // Identifieur de l'etat d'Invite
  93                                    "Start Epreuve !\n",  // Ptr sur la chaine contenant le msg d'invite
  94                                    BUT_Atteint_non,  // Arrivée au point transmit
  95                                    BUT_Servo_non,  // Information position servomoteur
  96                                    DCT_Obst_non, // Mode de détection d'obstacle
  97                                    0,  // ptr vers tableau des distances
  98                                    0,  // taille du tableau 
  99                                    RESULT_Courant_non, // Identificateur pour la mesure de courant
 100                                    0,  // Valeur de courant relevée
 101                                    RESULT_Energie_non, // Identificateur pour la mesure d'énergie
 102                                    0,  // Valeur d'énergie relevée
 103                                    RESULT_Position_non,  // Identificateur de position du robot
 104                                    0,  // Coord X
 105                                    0,  // Coord Y
 106                                    0,  // Angle
 107                                    Aux_non,  // Identificateur pour la commande auxiliare
 108                                    0 // ptr vers la chaîne de caractère auxiliare
 109                                };
 110            
 111            
 112                
 113                                
 114          PARSER_RESULT parser_result = {1 , &commands, &informations};
 115          DD_PACKET dd_packet = {&commands, &informations, 0.0, 0, 0, 0};
 116          SPI_PACKET spi_packet = { 0, {0xA5,0x00,0x64,'F','G'}, 0};
C51 COMPILER V9.55   MAIN                                                                  05/14/2019 08:56:50 PAGE 3   

 117          
 118          byte epreuve_start = 0;
 119          
 120          void Init_External_clk()
 121          {
 122   1        // Config External Osci
 123   1        OSCXCN = 0x67;
 124   1        while(OSCXCN != 0xE7) {}
 125   1        
 126   1        // Use Exern CLK
 127   1        OSCICN = 0x08;
 128   1          
 129   1        CKCON = 0x00;
 130   1      }
 131          
 132          void Enable_Crossbar()
 133          {
 134   1        // Enable Crossbar
 135   1        XBR2 |= 0x40;
 136   1      }
 137          
 138          void enable_general_Int()
 139          {
 140   1        EA = 1; // Enable general interruption
 141   1      }
 142          
 143          
 144          int main (void)
 145          {
 146   1      
 147   1        
 148   1        
 149   1        Reg = 0xDE;   // Dévalidation du watchdog 
 150   1        Reg = 0xAD;
 151   1        
 152   1        // µP candencé sur clk extern à 22 MHz           
 153   1        Init_External_clk();
 154   1        
 155   1        // Initialise l'UART0 et le Timer 2 pour le parser de commandes, et init le buffer des msg retour     
 156   1        Init_parser(&parser_result);
 157   1      
 158   1          
 159   1        // Initialise l'UART1 utilisé pour communiquer avec le sérializer
 160   1        init_serializer_UART1();
 161   1                    
 162   1        Init_ADC0();
 163   1        
 164   1        //Init_power_sensor();
 165   1        
 166   1        Init_distance_detector();
 167   1        
 168   1        Init_SPI();
 169   1        
 170   1        Enable_Crossbar();
 171   1      
 172   1        enable_general_Int();
 173   1        
 174   1        USART_print("Start Routine \n\n");
 175   1        USART_print("Waiting for Serializer Init Processing... \n\n");
 176   1        
 177   1      
 178   1                
C51 COMPILER V9.55   MAIN                                                                  05/14/2019 08:56:50 PAGE 4   

 179   1        serializer_init_serial();
 180   1                    
 181   1        USART_print("\n\n#############################\n\n>");
 182   1      
 183   1        //serializer_print("mogo 1:50 2:50");
 184   1                  
 185   1        while(1)
 186   1        {
 187   2          
 188   2          cmd_parser_process(&parser_result);
 189   2          
 190   2          if( parser_result.commands->Etat_Epreuve == Stop_Urgence)
 191   2          {
 192   3            USART_print("Quit");
 193   3            break;
 194   3          }
 195   2          
 196   2          if( parser_result.commands->Etat_Epreuve == epreuve1)
 197   2          {
 198   3            // Start epreuve message
 199   3            if(epreuve_start == 0)
 200   3            {
 201   4              parser_result.informations->Etat_Invite = Invite_oui;
 202   4              epreuve_start = 1;
 203   4            }
 204   3            
 205   3            // Robot movments handler
 206   3            serializer_process(&parser_result);
 207   3            /*
 208   3            // Robot obstacles detection handler
 209   3            distance_detector_process(&dd_packet);
 210   3            
 211   3            // Master-Slave communication
 212   3            spi_process(&commands, &spi_packet);
 213   3            */
 214   3            // Power sensor
 215   3            //power_sensor_process(&commands, &informations);
 216   3          
 217   3          }
 218   2          
 219   2          else if(parser_result.commands->Etat_Epreuve == epreuve2)
 220   2          {
 221   3            angle_calibration_process(&parser_result);
 222   3            
 223   3          }
 224   2          
 225   2        }
 226   1        
 227   1        USART_print("Fin Soft");
 228   1        
 229   1        while(1){}
 230   1        
 231   1      }
 232          
 233          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    231    ----
   CONSTANT SIZE    =    128    ----
   XDATA SIZE       =     89    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.55   MAIN                                                                  05/14/2019 08:56:50 PAGE 5   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
