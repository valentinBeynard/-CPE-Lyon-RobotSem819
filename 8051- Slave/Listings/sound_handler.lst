C51 COMPILER V9.55   SOUND_HANDLER                                                         05/14/2019 08:40:28 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE SOUND_HANDLER
OBJECT MODULE PLACED IN .\Objects\sound_handler.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\sound_handler.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PR
                    -INT(.\Listings\sound_handler.lst) TABS(2) OBJECT(.\Objects\sound_handler.obj)

line level    source

   1          #include "sound_handler.h"
   2          #include <string.h>
   3          
   4          
   5          SOUND_HANDLER_STATE sd_gen_current_state = SD_GEN_IDLE;
   6          
   7          /* Buffer principal dans lesquel est stocké tout caractère reçu sur la liaison UART du µP */
   8          byte raw_data[SD_GEN_BUFFER_SIZE];
   9          
  10          /* Pointer permettant de parcourir le Buffer Principal */
  11          byte sd_gen_buffer_index = 0;
  12          
  13          /**
  14            8051 µP :
  15            Initialize devices for commands_parser : UART0 and Timer 2
  16            UART0 = TX0 -> P0.0 | RX0 -> P0.1
  17          **/
  18          byte Init_uart0()
  19          {
  20   1        
  21   1        /****** INIT UART0 *****/
  22   1        SM00 = 0;
  23   1        SM10 = 1;
  24   1        REN0 = 1;   
  25   1          
  26   1        /****** INIT PIN *****/
  27   1        P0MDOUT |= 0x03;
  28   1        
  29   1        /****** Init UART0 on Crossbar *****/
  30   1        XBR0 |= 0x04;
  31   1      
  32   1        
  33   1        // Réglage timer 2
  34   1        T2CON = 0x0D; // Capture Mode & Counter Mode & Enable & External Trig enable
  35   1        RCLK0 = 1;
  36   1        TCLK0 = 1;
  37   1        RCAP2L = 0xDC;
  38   1        RCAP2H = 0xFF;
  39   1        TR2 = 1;
  40   1        
  41   1        return 0;
  42   1      }
  43          
  44          void UART0_receive(byte* read_byte)
  45          {
  46   1        if(RI0 == 1)
  47   1        {
  48   2          *read_byte = SBUF0;
  49   2          RI0 = 0;
  50   2        }else{
  51   2          *read_byte = '*';
  52   2        }
  53   1      }
  54          
C51 COMPILER V9.55   SOUND_HANDLER                                                         05/14/2019 08:40:28 PAGE 2   

  55          void UART0_send(byte ch)
  56          {
  57   1        SBUF0 = ch;
  58   1        while(TI0 == 0){}
  59   1        TI0 = 0;
  60   1      }
  61          
  62          void UART0_print(char* str)
  63          {
  64   1        byte i = 0;
  65   1        for(i = 0 ; i < strlen(str); i++)
  66   1        {
  67   2          UART0_send(*(str+i));
  68   2        }
  69   1      }
  70          
  71          /*
  72          #############################################################################
  73                  Core Code of sound_handler.c
  74          #############################################################################
  75          */
  76          
  77          void sound_handler_process(OUT_M2* cmd)
  78          {
  79   1        switch(sd_gen_current_state)
  80   1        {
  81   2          case SD_GEN_IDLE:
  82   2            sd_gen_idle(cmd);
  83   2            break;
  84   2          case SD_GEN_PARSE_CMD:
  85   2            // TODO
  86   2            break;
  87   2          default:
  88   2            sd_gen_send(cmd);
  89   2          break;
  90   2          
  91   2        }
  92   1        //wait(result);
  93   1      }
  94          
  95          void sd_gen_idle(OUT_M2* cmd)
  96          {
  97   1        byte read_byte = '*';
  98   1        
  99   1        if(cmd->Etat_GEN_Son == GEN_oui || cmd->Etat_ACQ_Son == ACQ_oui)
 100   1        {
 101   2          sd_gen_current_state = SD_GEN_SEND_CMD;
 102   2        }
 103   1        else
 104   1        {
 105   2          // Scrutation sur l'UART0
 106   2          UART0_receive(&read_byte);
 107   2      
 108   2          // Si on lit un caractère
 109   2          if(read_byte != '*'){
 110   3              if(read_byte == STOP_BYTE)
 111   3              {
 112   4                // On passe à l'Etat 'Get Command' après avoir terminé de préparer le Buffer
 113   4                raw_data[sd_gen_buffer_index] = read_byte;
 114   4                sd_gen_buffer_index++;
 115   4                // Tjrs ajouter un '\0' à la fin du buffer, sinon strlen ne marche pas...
 116   4                raw_data[sd_gen_buffer_index] = '\0';
C51 COMPILER V9.55   SOUND_HANDLER                                                         05/14/2019 08:40:28 PAGE 3   

 117   4                sd_gen_current_state = SD_GEN_PARSE_CMD;
 118   4              }else{
 119   4                UART0_send(read_byte);
 120   4                raw_data[sd_gen_buffer_index] = read_byte;
 121   4                sd_gen_buffer_index++;
 122   4              }
 123   3          }
 124   2        }
 125   1        
 126   1      }
 127          
 128          void sd_gen_send(OUT_M2* cmd)
 129          {
 130   1      
 131   1        if(cmd->Etat_GEN_Son == GEN_oui)
 132   1        {
 133   2          UART0_send(SD_GEN_GENERATE_CMD);
 134   2          UART0_send(COMMAND_SEPARATOR);
 135   2          
 136   2          UART0_send(cmd->GEN_freq_code);
 137   2          UART0_send(COMMAND_SEPARATOR);
 138   2          
 139   2          UART0_send(cmd->GEN_son_Duree);
 140   2          UART0_send(COMMAND_SEPARATOR);
 141   2          
 142   2          UART0_send(cmd->GEN_silence_Duree);
 143   2          UART0_send(COMMAND_SEPARATOR);
 144   2          
 145   2          UART0_send(cmd->GEN_nbr_bip);
 146   2          UART0_send(STOP_BYTE);
 147   2          
 148   2        }
 149   1        else if(cmd->Etat_ACQ_Son == ACQ_oui)
 150   1        {
 151   2            // TODO
 152   2        }
 153   1        else
 154   1        {
 155   2          
 156   2        }
 157   1        sd_gen_current_state = SD_GEN_IDLE;
 158   1      }
 159          
 160          void sd_gen_parse(OUT_M2* cmd)
 161          {
 162   1        if(strcmp(raw_data, "SD_F") == 0)
 163   1        {
 164   2          cmd->Etat_GEN_Son = GEN_non;
 165   2        }
 166   1        else if(strcmp(raw_data, "ASS_F") == 0)
 167   1        {
 168   2          cmd->Etat_ACQ_Son = ACQ_non;
 169   2        }
 170   1        else
 171   1        {
 172   2          
 173   2        }
 174   1        
 175   1        memset(raw_data, 0, sd_gen_buffer_index);
 176   1        sd_gen_buffer_index = 0;
 177   1        sd_gen_current_state = SD_GEN_IDLE;
 178   1      }
C51 COMPILER V9.55   SOUND_HANDLER                                                         05/14/2019 08:40:28 PAGE 4   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    471    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =     18      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
