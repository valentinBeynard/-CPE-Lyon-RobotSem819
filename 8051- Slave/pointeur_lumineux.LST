C51 COMPILER V9.55   POINTEUR_LUMINEUX                                                     04/24/2019 09:30:08 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE POINTEUR_LUMINEUX
OBJECT MODULE PLACED IN pointeur_lumineux.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE pointeur_lumineux.c LARGE OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND TA
                    -BS(2)

line level    source

   1          #include "c8051F020.h"
   2          //#include <string.h>
   3          //#include <stdio.h>
   4          #include "pointeur_lumineux.h"
*** WARNING C323 IN LINE 13 OF pointeur_lumineux.h: newline expected, extra characters found
   5          //#define STATE_WAITING 0
   6          //#define PWN_PERIOD  4000
   7          sfr Reg    =   0xFF; 
   8          
   9          int E;
  10          int D;
  11          float I;
  12          int up;
  13          int down;
  14          int N;
  15          
  16          char high = 1;
  17          char angle = 0;
  18          int reload = 0;
  19          int int_servo_OK = 0;
  20          int param_ok;
  21          int is_ended;
  22          // int i=0;
  23          double essai;
  24          int N_cycle;
  25          int cpt_lum;
  26          int cpt_cycle;
  27          
  28          enum Lumiere * f_lum = Eteindre;
  29          
  30          sbit output_lum = P1^0;
  31          
  32          //initialisation du timer0
  33          void init_timer4()
  34          { 
  35   1        // Config External Osci
  36   1        OSCXCN = 0x67;
  37   1        while(OSCXCN != 0xE7) {}
  38   1        
  39   1        // Use Exern CLK
  40   1        OSCICN = 0x08;
  41   1          
  42   1        /****** INIT TIMER ******/
  43   1        CKCON = 0x40; // Set CLK divider to 12 for timer 0 and 2
  44   1        // Réglage timer 0
  45   1        
  46   1      //paramétrage timer 4
  47   1        T4CON &= 0x4a;
  48   1      /*  T4CON &= 0xFE;
  49   1        T4CON &= 0xFB;
  50   1        T4CON &= 0xEF;
  51   1        T4CON &= 0xDF;
  52   1        T4CON &= 0x7F;
  53   1        T4CON &= 0xFD;
C51 COMPILER V9.55   POINTEUR_LUMINEUX                                                     04/24/2019 09:30:08 PAGE 2   

  54   1        T4CON &= ~1<<7;
  55   1          */
  56   1      
  57   1        
  58   1        RCAP4L = 0x00; //valeur de recharge lowbite
  59   1        RCAP4H = 0x00; //valeur de recharge highbite
  60   1        TH4=0x00;
  61   1        TL4=0x00;
  62   1      
  63   1        // Pin
  64   1        XBR1 = 0x02;
  65   1        // Enable Crossbar
  66   1        XBR2 = 0x40;
  67   1          
  68   1        // Push Pull mode
  69   1        P1MDOUT = 0xFF;
  70   1            
  71   1      }
  72          
  73          void timer_4_int() interrupt 16
  74          {
  75   1        if (cpt_cycle >= N_cycle)
  76   1        {
  77   2          output_lum = 0;
  78   2          *f_lum = Eteindre;
  79   2          T4CON &= 0xFB;
  80   2        }
  81   1        else if (high == 0)
  82   1        {
  83   2          if (cpt_lum <= 4000)
  84   2          {
  85   3            cpt_lum++;
  86   3          } else {
  87   3            cpt_lum = 0;
  88   3            //essai = E;
  89   3            reload = E;
  90   3            high = 1;
  91   3          }
  92   2        } else {
  93   2          if (cpt_lum <= 4000)
  94   2          {
  95   3            if (output_lum == 1)
  96   3            {
  97   4              //essai = D * (1 - I);
  98   4              reload = up;
  99   4              output_lum = 0;
 100   4              cpt_lum++;
 101   4            } 
 102   3            else {
 103   4              //essai = D * I;
 104   4              reload = down;
 105   4              output_lum = 1;
 106   4            }
 107   3          } else {
 108   3            high = 0;
 109   3            cpt_lum = 0;
 110   3            output_lum = 0;
 111   3            cpt_cycle++;
 112   3            //essai = E;
 113   3            reload = E;
 114   3            
 115   3          }
C51 COMPILER V9.55   POINTEUR_LUMINEUX                                                     04/24/2019 09:30:08 PAGE 3   

 116   2        }
 117   1        
 118   1        RCAP4L = reload;
 119   1        RCAP4H = reload >> 8;
 120   1        //T4CON|=0x08;
 121   1        //T4CON&=0xF7;
 122   1        //IE7 &= ~1<<5;
 123   1        T4CON  &= 0x7f;
 124   1        //TH4=RCAP4H;
 125   1        //TL4=RCAP4L;
 126   1        /*TL4 = reload;
 127   1        TH4 = reload >> 8;*/
 128   1      }
 129          
 130          
 131          void init_interrupt()
 132          {
 133   1        EA = 1; // Enable general interruption
 134   1        EIE2 |= 0x04; // Enable timer4 interuption
 135   1      }
 136          
 137          void init()
 138          {
 139   1        init_timer4();
 140   1        init_interrupt();
 141   1        output_lum = 0;
 142   1      
 143   1      }
 144          
 145          
 146          int change_lumiere(double t_allume, double t_eteint, int intensite, int N, enum Lumiere * flag_lum)
 147          { 
 148   1        static unsigned char init = 0;
 149   1        
 150   1        if(init == 0)
 151   1        {
 152   2          if(*flag_lum == Allumer)
 153   2          {
 154   3            f_lum = flag_lum;
 155   3            if((t_allume <= 9.9 && t_allume >= 0.1) && (t_eteint <= 9.9 && t_eteint >= 0.1) && (intensite >= 1 && i
             -ntensite <= 100) && (N >= 1) && (N <= 99))
 156   3            {
 157   4              is_ended = 0;
 158   4              
 159   4              E = 0xffff - (int) (t_eteint * 5529.6); 
 160   4              D = (int) (t_allume * 5529.6);
 161   4              I = (float) intensite / 100;
 162   4              N_cycle = N;
 163   4              cpt_lum = 0;
 164   4              cpt_cycle = 0;
 165   4              down = (0xffff -  (int) (D * (1 - I)));
 166   4              up =  (0xffff - (int)( D * I));
 167   4              T4CON |= 0x04;
 168   4              init = 1;
 169   4              return 1;
 170   4            }
 171   3          }
 172   2          else{
 173   3            init = 0;
 174   3            return 0;
 175   3          }
 176   2        }
C51 COMPILER V9.55   POINTEUR_LUMINEUX                                                     04/24/2019 09:30:08 PAGE 4   

 177   1        else
 178   1        {
 179   2          return 0;
 180   2        }
 181   1      
 182   1      }
 183          
 184          /*
 185          void main (void) 
 186          { 
 187            Reg = 0xDE; // Ne pas enlever ces 2 lignes de code
 188            Reg = 0xAD; // Les laisser au tout d?but du main
 189            
 190            init();
 191            change_lumiere(1, 5, 50, 3);
 192            //T4CON |= 0x04;
 193            while(1){}
 194          }*/
*** WARNING C291 IN LINE 182 OF pointeur_lumineux.c: not every exit path returns a value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    975    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     53    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
