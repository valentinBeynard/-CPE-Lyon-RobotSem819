C51 COMPILER V9.55   LIGHT_BEAM                                                            04/17/2019 14:22:00 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE LIGHT_BEAM
OBJECT MODULE PLACED IN light_beam.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\light_beam.c LARGE OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT
                    -(.\light_beam.lst) TABS(2) OBJECT(light_beam.obj)

line level    source

   1          #include "light_beam.h"
   2          
   3          //port de sortie
   4          sbit PWN_pin = P1^0;
   5          sbit FLASH_pin = P1^1;
   6          
   7          volatile int servo_angle_V = -90;
   8          
   9          volatile int duree_flash = 0;
  10          volatile int duree_no_flash = 0;
  11          volatile byte nbr_flash = 0;
  12          volatile byte pwn_duty = 0;
  13          
  14          byte light_ON = 0;
  15          
  16          
  17          /*
  18          #############################################################################
  19                  Interrupt Routine For Timer 0
  20          #############################################################################
  21          */
  22          
  23          
  24          void timer_0_int() interrupt 1
  25          { 
  26   1        static byte nbr_interrupt = 0;
  27   1        static char high = 0;
  28   1        
  29   1        int duree_imp = 0;
  30   1        int reload_value = 0;
  31   1      
  32   1        //duree_imp = 10*(servo_angle_V+90) + 600 ;// 600us pour 90°  (cf doc technique)
  33   1        
  34   1        duree_imp = SERVO_PWN_ANGLE_COEF *(servo_angle_V+90) + 2000 ;// 1ms pour -90°  (cf doc technique)
  35   1      
  36   1        PWN_pin = !PWN_pin;
  37   1        
  38   1        if (high == 1)
  39   1        {
  40   2          reload_value = 0xFFFF - (2 * SERVO_PWN_PERIOD - duree_imp );
  41   2          high=0;
  42   2        } else {
  43   2          
  44   2          reload_value = 0xFFFF - duree_imp;
  45   2          high=1;
  46   2        }
  47   1        TL0= reload_value;
  48   1        TH0= reload_value >> 8; //on décale pour obtenir les bits de poids fort
  49   1        
  50   1        
  51   1        if(nbr_interrupt >= 150)
  52   1        {
  53   2          ET0 = 0;  // Diseable timer0 interuption
  54   2          PWN_pin = 0;
C51 COMPILER V9.55   LIGHT_BEAM                                                            04/17/2019 14:22:00 PAGE 2   

  55   2          high = 0;
  56   2          nbr_interrupt = 0;
  57   2        }
  58   1        else
  59   1        {
  60   2          nbr_interrupt++;
  61   2        }
  62   1      }
  63          
  64          /*
  65          #############################################################################
  66                  End of Interrupt Routine For Timer 0
  67          #############################################################################
  68          */
  69          
  70          /*
  71          #############################################################################
  72                  Interrupt Routine For Timer 1
  73          #############################################################################
  74          */
  75          
  76          void timer_1_int() interrupt 3
  77          { 
  78   1        static byte nbr_int = 0;
  79   1        static char prescaler_counter = 0;
  80   1        static char high = 0;
  81   1        
  82   1        int reload_value = 0;
  83   1        
  84   1        if (high == 1)
  85   1        {
  86   2          if(prescaler_counter < 10 * duree_flash)
  87   2          {
  88   3            FLASH_pin = !FLASH_pin;
  89   3            reload_value = 0xFFFF - (LIGHT_PWN_PERIOD - pwn_duty * LIGHT_PWN_DUTY_1 );
  90   3            prescaler_counter++;
  91   3            high=0;
  92   3          }
  93   2          else
  94   2          {
  95   3            FLASH_pin = 0;
  96   3            reload_value = 0xFFFF - LIGHT_PWN_PERIOD;
  97   3            prescaler_counter = 0;
  98   3            high=3;
  99   3          } 
 100   2        }
 101   1        else if (high == 0)
 102   1        {
 103   2          FLASH_pin = !FLASH_pin;
 104   2          reload_value = 0xFFFF - pwn_duty * LIGHT_PWN_DUTY_1;
 105   2          prescaler_counter++;
 106   2          high=1;
 107   2        }
 108   1        else
 109   1        {
 110   2          reload_value = 0xFFFF - LIGHT_PWN_PERIOD;
 111   2          if(prescaler_counter < 10 * duree_no_flash)
 112   2          {
 113   3            prescaler_counter++;
 114   3          }
 115   2          else{
 116   3            prescaler_counter = 0;
C51 COMPILER V9.55   LIGHT_BEAM                                                            04/17/2019 14:22:00 PAGE 3   

 117   3            high = 0;
 118   3          }
 119   2        }
 120   1        
 121   1        TL1= reload_value;
 122   1        TH1= reload_value >> 8; //on décale pour obtenir les bits de poids fort
 123   1        
 124   1        if(nbr_int >= nbr_flash)
 125   1        {
 126   2          ET1 = 0;  // Diseable timer1 interuption
 127   2          FLASH_pin = 0;
 128   2          prescaler_counter = 0;
 129   2          high = 0;
 130   2          nbr_int = 0;
 131   2          light_ON = 0;
 132   2        }
 133   1        else
 134   1        {
 135   2          nbr_int++;
 136   2        }
 137   1      }
 138          
 139          /*
 140          #############################################################################
 141                  End of Interrupt Routine For Timer 1
 142          #############################################################################
 143          */
 144          
 145          /*
 146          #############################################################################
 147                  Peripheric initialize
 148          #############################################################################
 149          */
 150          
 151          
 152          void Init_light_beam()
 153          {
 154   1        
 155   1        // Push-Pull mode
 156   1        P1MDOUT |= 0x01;
 157   1        PWN_pin = 0;
 158   1        
 159   1        lb_init_timer0();
 160   1        
 161   1        lb_init_timer1();
 162   1        
 163   1        ET0 = 0;  // Diseable timer0 interuption
 164   1        ET1 = 0;  // Diseable timer1 interuption
 165   1      
 166   1      }
 167          
 168          
 169          void lb_init_timer0()
 170          { 
 171   1        //Reglages Timer 0 (a SYSCLK/12 selon CKCON, soit un incrément tous les 0.545us)
 172   1        TMOD |=0x01; //mode 1
 173   1        TCON |= 0x11; // Enable Timer0 (bit4) and enable interupt on edge (bit0)
 174   1        TL0=0xA8;
 175   1        TH0=0xFB;
 176   1        
 177   1      }
 178          
C51 COMPILER V9.55   LIGHT_BEAM                                                            04/17/2019 14:22:00 PAGE 4   

 179          void lb_init_timer1()
 180          { 
 181   1        //Reglages Timer 0 (a SYSCLK/12 selon CKCON, soit un incrément tous les 0.545us)
 182   1        TMOD |= 0x10; // Timer 1 Mode 1
 183   1        TCON |= 0x44; // Enable Timer1 (bit6) and enable interupt on edge (bit2)
 184   1        
 185   1        TL1=0xA8;
 186   1        TH1=0xFB;
 187   1        
 188   1      }
 189          
 190          
 191          /*
 192          #############################################################################
 193                  Light Beam Emetter Core
 194          #############################################################################
 195          */
 196          
 197          void light_beam_process(OUT_M2 * cmd)
 198          {
 199   1        if(cmd->Etat_Servo == Servo_oui)
 200   1        {
 201   2          light_beam_move(cmd);
 202   2        }
 203   1      
 204   1        if(cmd->Etat_Lumiere == Allumer)
 205   1        {
 206   2          if(light_ON != 1)
 207   2          {
 208   3            light_beam_switch_ON(cmd);
 209   3          }
 210   2          else{
 211   3            // Clear CMD Flag
 212   3            cmd->Etat_Lumiere = Eteindre;
 213   3          }   
 214   2        }
 215   1        else if(cmd->Etat_Lumiere == Eteindre)
 216   1        {
 217   2          // TODO
 218   2        }
 219   1        
 220   1      }
 221          
 222          void light_beam_move(OUT_M2 * cmd)
 223          {
 224   1        // Set angle
 225   1        if(cmd->Servo_Angle != 0)
 226   1        {
 227   2          lb_set_angle(cmd->Servo_Angle);
 228   2        }
 229   1        else
 230   1        {
 231   2          cmd->Servo_Angle = 90;
 232   2          lb_set_angle(cmd->Servo_Angle);
 233   2        }
 234   1        
 235   1        // Re-launch PWN
 236   1        //pwn_over = 0;
 237   1        ET0 = 1;
 238   1        
 239   1        // Clear CMD Flag
 240   1        cmd->Etat_Servo = Servo_non;
C51 COMPILER V9.55   LIGHT_BEAM                                                            04/17/2019 14:22:00 PAGE 5   

 241   1        
 242   1        LED = 1;
 243   1        
 244   1      }
 245          
 246          void light_beam_switch_ON(OUT_M2 * cmd)
 247          {
 248   1        pwn_duty = cmd->Lumiere_Intensite;
 249   1        duree_flash = cmd->Lumiere_Duree;
 250   1        duree_no_flash = cmd->Lumire_Extinction;
 251   1        nbr_flash = cmd->Lumiere_Nbre;
 252   1        
 253   1        light_ON = 1;
 254   1        
 255   1        // Re-launch PWN
 256   1        ET1 = 1;
 257   1        
 258   1        LED = 1;
 259   1      
 260   1      }
 261          
 262          void lb_set_angle(int angle)
 263          {
 264   1        servo_angle_V = angle;
 265   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1073    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     31    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
