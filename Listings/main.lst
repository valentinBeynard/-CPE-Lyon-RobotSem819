C51 COMPILER V9.55   MAIN                                                                  04/02/2019 22:31:06 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\main.c LARGE OPTIMIZE(2,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "debug.h"
   2          #include "commands_parser.h"
   3          #include "serializer.h"
   4          #include "distance_detector.h"
   5          
   6          #include <stdlib.h>
   7          #include <stdio.h>
   8          #include <string.h>
   9          
  10          sfr Reg = 0xFF;
  11          
  12            OUT_M1 commands = {Epreuve_non, // Numéro Epreuve
  13                                Mouvement_non,  // Etat mouvement
  14                                0,  //  Vitesse
  15                                0,  // Coord_X
  16                                0,  // Coord_Y
  17                                0,  // Angle
  18                                ACQ_non,  // Commande d'acquisition du son
  19                                0,  // Durée d'acquisition
  20                                DCT_non,  // Commande de détection d'obstacle
  21                                0,  // Résolution angulaire de la détection d'obstacle
  22                                Lumiere_non,  // Commande d'allumage du pointeur lumineux
  23                                0,  //Intensitée lumineuse
  24                                0,  // Durée d'allumage
  25                                0,  // Durée d'extinction
  26                                0,  // Nombre de cycles d'allumage
  27                                Servo_non,  // Commande de position du servo
  28                                0,  // Paramètre angle
  29                                Energie_non,  // Commande relevée courant
  30                                Position_non, // Commande de gestion de position
  31                                0,  // Coord X de position
  32                                0,  // Coord Y de position
  33                                0,  // Angle
  34                                Photo_non,  // Commande de prise de phot
  35                                0,  // Temps entre deux photo
  36                                0 // Nbr de photo
  37                                };
  38                                
  39            IN_M1 informations = { Invite_non,  // Identifieur de l'etat d'Invite
  40                                    "Start Epreuve !\n",  // Ptr sur la chaine contenant le msg d'invite
  41                                    BUT_Atteint_non,  // Arrivée au point transmit
  42                                    BUT_Servo_non,  // Information position servomoteur
  43                                    DCT_Obst_non, // Mode de détection d'obstacle
  44                                    0,  // ptr vers tableau des distances
  45                                    0,  // taille du tableau 
  46                                    RESULT_Courant_non, // Identificateur pour la mesure de courant
  47                                    0,  // Valeur de courant relevée
  48                                    RESULT_Energie_non, // Identificateur pour la mesure d'énergie
  49                                    0,  // Valeur d'énergie relevée
  50                                    RESULT_Position_non,  // Identificateur de position du robot
  51                                    0,  // Coord X
  52                                    0,  // Coord Y
  53                                    0,  // Angle
  54                                    Aux_non,  // Identificateur pour la commande auxiliare
C51 COMPILER V9.55   MAIN                                                                  04/02/2019 22:31:06 PAGE 2   

  55                                    0 // ptr vers la chaîne de caractère auxiliare
  56                                };
  57            
  58                
  59                                
  60          PARSER_RESULT parser_result = {1 , &commands, &informations};
  61          DD_PACKET dd_packet = {&commands, &informations, 0.0, 0};
  62          
  63          void Init_External_clk()
  64          {
  65   1        // Config External Osci
  66   1        OSCXCN = 0x67;
  67   1        while(OSCXCN != 0xE7) {}
  68   1        
  69   1        // Use Exern CLK
  70   1        OSCICN = 0x08;
  71   1      }
  72          
  73          void Init_Crossbar()
  74          {
  75   1        // Init UART0 on Crossbar
  76   1        XBR0 = 0x04;
  77   1        
  78   1        // Init UART1 on Crossbar
  79   1        XBR2 |= 0x04;
  80   1        
  81   1        // Push Pull mode
  82   1        P0MDOUT = 0xFF;
  83   1        
  84   1        // Enable Crossbar
  85   1        XBR2 |= 0x40;
  86   1      }
  87          
  88          
  89          #ifdef ROBOT
  90          
  91          int main (void)
  92          {
  93   1        char mes[10];
  94   1        float f = 0.0;                
  95   1        
  96   1        
  97   1        Reg = 0xDE;   // Dévalidation du watchdog 
  98   1        Reg = 0xAD;
  99   1        
 100   1        // µP candencé sur clk extern à 22 MHz           
 101   1        Init_External_clk();
 102   1        
 103   1        // Initialise l'UART0 et le Timer 2 pour le parser de commandes       
 104   1        init_parser();
 105   1          
 106   1        // Initialise l'UART1 utilisé pour communiquer avec le sérializer
 107   1        init_serializer_UART1();
 108   1                    
 109   1        Init_Crossbar();
 110   1        
 111   1        //dd_init_telemeter();
 112   1        Init_distance_detector();
 113   1      
 114   1        USART_print("Start Routine \n\n");
 115   1        USART_print("Waiting for Serializer Init Processing... \n\n");
 116   1                
C51 COMPILER V9.55   MAIN                                                                  04/02/2019 22:31:06 PAGE 3   

 117   1        serializer_init_serial();
 118   1                    
 119   1        USART_print("\n\n#############################\n\n>");
 120   1      
 121   1        //serializer_print("mogo 1:50 2:50");
 122   1                  
 123   1        while(1)
 124   1        {
 125   2          
 126   2          //parser_process(state, &parser_result);
 127   2          cmd_parser_process(&parser_result);
 128   2          
 129   2          if( parser_result.commands->Etat_Epreuve == Stop_Urgence)
 130   2          {
 131   3            USART_print("Quit");
 132   3            break;
 133   3          }
 134   2          
 135   2          if( parser_result.commands->Etat_Epreuve == epreuve1)
 136   2          {
 137   3            //USART_print(parser_result.informations.MSG_Invit);
 138   3            
 139   3            serializer_process(&parser_result);
 140   3            
 141   3            distance_detector_process(&dd_packet);
 142   3            
 143   3            // Commande Télémètre
 144   3            /*
 145   3            if(parser_result.commands->Etat_DCT_Obst == oui_180)
 146   3            {
 147   3              f = dd_start_conversion();
 148   3              sprintf(mes, "%f", f);
 149   3              USART_print(mes);
 150   3              memset(mes, 0, 10);
 151   3              parser_result.commands->Etat_DCT_Obst = DCT_non;
 152   3            }*/
 153   3            
 154   3            if(parser_result.informations->Etat_BUT_Mouvement == BUT_Atteint_oui)
 155   3            {
 156   4              USART_print("Target Reached !! Success !\n");
 157   4              parser_result.informations->Etat_BUT_Mouvement = BUT_Atteint_non;
 158   4            }
 159   3            
 160   3          }
 161   2          else{
 162   3            parser_result.commands->Etat_Mouvement = Mouvement_non;
 163   3          }
 164   2          
 165   2        }
 166   1        
 167   1        USART_print("Fin Soft");
 168   1        
 169   1        while(1);
 170   1      }
*** WARNING C280 IN LINE 93 OF src\main.c: 'mes': unreferenced local variable
 171          
 172          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    257    ----
   CONSTANT SIZE    =    157    ----
C51 COMPILER V9.55   MAIN                                                                  04/02/2019 22:31:06 PAGE 4   

   XDATA SIZE       =     71      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
