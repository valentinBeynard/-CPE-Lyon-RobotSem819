C51 COMPILER V9.55   MAIN                                                                  04/09/2019 12:12:00 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\main.c LARGE OPTIMIZE(2,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "debug.h"
   2          #include "commands_parser.h"
   3          #include "serializer.h"
   4          #include "distance_detector.h"
   5          
   6          #include <stdlib.h>
   7          #include <stdio.h>
   8          #include <string.h>
   9          
  10          #include "spi_master.h"
  11          
  12          
  13          #define SPI_DEBUG
  14          
  15          /*
  16          #############################################################################
  17                  PIN List
  18          #############################################################################
  19          *
  20          * UART0 = TX0 -> P0.0 | RX0 -> P0.1 
  21          *
  22          * SPI = SCK -> P0.2 | MISO -> P0.3 | MOSI -> P0.4 | NSS -> P0.5
  23          *       SCK : OUT
  24          *       MISO : IN
  25          *       MOSI : OUT
  26          *       NSS : Vcc
  27          *
  28          * UART1 : TX1 -> P0.6 | RX1 -> P0.7
  29          *
  30          * Pin NSS_slave : P1.0
  31          *
  32          * Pin Servo_H : P1.2
  33          *
  34          * Pin ADC1 : AIN0
  35          *
  36          *
  37          *
  38          *
  39          */
  40          
  41          
  42          sfr Reg = 0xFF;
  43          
  44            OUT_M1 commands = {Epreuve_non, // Numéro Epreuve
  45                                Mouvement_non,  // Etat mouvement
  46                                0,  //  Vitesse
  47                                0,  // Coord_X
  48                                0,  // Coord_Y
  49                                0,  // Angle
  50                                ACQ_non,  // Commande d'acquisition du son
  51                                0,  // Durée d'acquisition
  52                                DCT_non,  // Commande de détection d'obstacle
  53                                0,  // Résolution angulaire de la détection d'obstacle
  54                                Lumiere_non,  // Commande d'allumage du pointeur lumineux
C51 COMPILER V9.55   MAIN                                                                  04/09/2019 12:12:00 PAGE 2   

  55                                0,  //Intensitée lumineuse
  56                                0,  // Durée d'allumage
  57                                0,  // Durée d'extinction
  58                                0,  // Nombre de cycles d'allumage
  59                                Servo_non,  // Commande de position du servo
  60                                0,  // Paramètre angle
  61                                Energie_non,  // Commande relevée courant
  62                                Position_non, // Commande de gestion de position
  63                                0,  // Coord X de position
  64                                0,  // Coord Y de position
  65                                0,  // Angle
  66                                Photo_non,  // Commande de prise de phot
  67                                0,  // Temps entre deux photo
  68                                0 // Nbr de photo
  69                                };
  70                                
  71            IN_M1 informations = { Invite_non,  // Identifieur de l'etat d'Invite
  72                                    "Start Epreuve !\n",  // Ptr sur la chaine contenant le msg d'invite
  73                                    BUT_Atteint_non,  // Arrivée au point transmit
  74                                    BUT_Servo_non,  // Information position servomoteur
  75                                    DCT_Obst_non, // Mode de détection d'obstacle
  76                                    0,  // ptr vers tableau des distances
  77                                    0,  // taille du tableau 
  78                                    RESULT_Courant_non, // Identificateur pour la mesure de courant
  79                                    0,  // Valeur de courant relevée
  80                                    RESULT_Energie_non, // Identificateur pour la mesure d'énergie
  81                                    0,  // Valeur d'énergie relevée
  82                                    RESULT_Position_non,  // Identificateur de position du robot
  83                                    0,  // Coord X
  84                                    0,  // Coord Y
  85                                    0,  // Angle
  86                                    Aux_non,  // Identificateur pour la commande auxiliare
  87                                    0 // ptr vers la chaîne de caractère auxiliare
  88                                };
  89            
  90                
  91                                
  92          PARSER_RESULT parser_result = {1 , &commands, &informations};
  93          DD_PACKET dd_packet = {&commands, &informations, 0.0, 0};
  94          
  95          void Init_External_clk()
  96          {
  97   1        // Config External Osci
  98   1        OSCXCN = 0x67;
  99   1        while(OSCXCN != 0xE7) {}
 100   1        
 101   1        // Use Exern CLK
 102   1        OSCICN = 0x08;
 103   1          
 104   1        CKCON = 0x00;
 105   1      }
 106          
 107          void Enable_Crossbar()
 108          {
 109   1        // Enable Crossbar
 110   1        XBR2 |= 0x40;
 111   1      }
 112          
 113          void enable_general_Int()
 114          {
 115   1        EA = 1; // Enable general interruption
 116   1      }
C51 COMPILER V9.55   MAIN                                                                  04/09/2019 12:12:00 PAGE 3   

 117          
 118          #ifdef ROBOT
 119          
 120          int main (void)
 121          {
 122   1        char mes[10];
 123   1        float f = 0.0;
 124   1        int angle = 80;
 125   1        
 126   1        
 127   1        Reg = 0xDE;   // Dévalidation du watchdog 
 128   1        Reg = 0xAD;
 129   1        
 130   1        // µP candencé sur clk extern à 22 MHz           
 131   1        Init_External_clk();
 132   1        
 133   1        // Initialise l'UART0 et le Timer 2 pour le parser de commandes       
 134   1        init_parser();
 135   1          
 136   1        // Initialise l'UART1 utilisé pour communiquer avec le sérializer
 137   1        init_serializer_UART1();
 138   1                    
 139   1        Init_distance_detector();
 140   1        
 141   1        Init_SPI();
 142   1        
 143   1        Enable_Crossbar();
 144   1      
 145   1        enable_general_Int();
 146   1      
 147   1        USART_print("Start Routine \n\n");
 148   1        USART_print("Waiting for Serializer Init Processing... \n\n");
 149   1        
 150   1      #ifndef SPI_DEBUG
                        
                serializer_init_serial();
                            
                USART_print("\n\n#############################\n\n>");
              
                //serializer_print("mogo 1:50 2:50");
                          
                while(1)
                {
                  
                  cmd_parser_process(&parser_result);
                  
                  if( parser_result.commands->Etat_Epreuve == Stop_Urgence)
                  {
                    USART_print("Quit");
                    break;
                  }
                  
                  if( parser_result.commands->Etat_Epreuve == epreuve1)
                  {
                    //USART_print(parser_result.informations.MSG_Invit);      
                    
                    serializer_process(&parser_result);
                    
                    
                    distance_detector_process(&dd_packet);
                    
                    
C51 COMPILER V9.55   MAIN                                                                  04/09/2019 12:12:00 PAGE 4   

                    if(parser_result.commands->Etat_DCT_Obst == oui_180)
                    {
                      dd_packet.measure = dd_start_conversion();
                      sprintf(mes, "%f", dd_packet.measure);
                      USART_print(mes);
                      memset(mes, 0, 10);
                      parser_result.commands->Etat_DCT_Obst = DCT_non;
                    }
                    
                    if(parser_result.informations->Etat_BUT_Mouvement == BUT_Atteint_oui)
                    {
                      USART_print("Target Reached !! Success !\n");
                      parser_result.informations->Etat_BUT_Mouvement = BUT_Atteint_non;
                    }
                    
                  }
                  else{
                    parser_result.commands->Etat_Mouvement = Mouvement_non;
                  }
                  
                }
                
                USART_print("Fin Soft");
                
                while(1);
                
              #else
 206   1        USART_print("SPI Debug \n\n");
 207   1        while(1)
 208   1        {
 209   2          spi_send_char('P');
 210   2        
 211   2        }
 212   1        
 213   1      #endif
 214   1        
 215   1      }
*** WARNING C280 IN LINE 122 OF src\main.c: 'mes': unreferenced local variable
 216          
 217          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    103    ----
   CONSTANT SIZE    =     92    ----
   XDATA SIZE       =     71      16
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
